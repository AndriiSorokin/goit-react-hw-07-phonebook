{"version":3,"sources":["redux/actions/user-action.js","redux/reducers/userReducer.js","redux/store.js","redux/contactOperations/contactOperations.js","redux/contactSelector/contactSelector.js","PhoneBook/Form.js","PhoneBook/Contacts.js","PhoneBook/Filter.js","PhoneBook/PhoneBook.js","App.js","index.js","PhoneBook/PhoneBook.module.css"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","state","payload","filter","id","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","userReducer","devTools","process","persistor","persistStore","axios","defaults","baseURL","getFilter","getVisibleUser","createSelector","normalizeFilter","toLowerCase","contact","name","includes","Form","phone","inputHandler","target","value","setState","submitHandler","e","preventDefault","props","find","alert","reset","onSubmit","this","className","style","form","autoComplete","onChange","placeholder","type","btn","Component","connect","contactSelector","dispatch","post","then","data","catch","error","addToList","deleteNumber","delete","deleteContact","console","log","map","btnDelete","onClick","PhoneBook","fetchNumber","container","get","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c93ba551.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contact/fetchContact/Request');\nexport const fetchContactSuccess = createAction('contact/fetchContactSuccess');\nexport const fetchContactError = createAction('contact/fetchContactError');\n\nexport const addContactRequest = createAction('contact/addContact/Request');\nexport const addContactSuccess = createAction('contact/addContactSuccess');\nexport const addContactError = createAction('contact/addContactError');\n\nexport const deleteContactRequest = createAction('contact/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contact/deleteContactSuccess');\nexport const deleteContactError = createAction('contact/deleteContactError');\n\nexport const changeFilter = createAction('contact/filter');\n","import {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  changeFilter,\n} from '../actions/user-action';\nimport { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (state, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (state, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport userReducer from './reducers/userReducer';\nimport logger from 'redux-logger';\nimport { persistStore, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: userReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n\n// export default store;\n","import {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from '../actions/user-action';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:3000';\n\nexport const fetchContact = () => dispatch => {\n  dispatch(fetchContactRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch(error => dispatch(fetchContactError(error)));\n};\n\nexport const addToList = ({ name, phone }) => dispatch => {\n  const contact = {\n    name,\n    phone,\n  };\n  dispatch(addContactRequest());\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getAllContact = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\n\nconst getVisibleUser = createSelector([getAllContact, getFilter], (contacts, filter) => {\n  const normalizeFilter = filter.toLowerCase();\n  return contacts.filter(contact => contact.name.toLowerCase().includes(normalizeFilter));\n});\n\nexport default {\n  getFilter,\n  getVisibleUser,\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addToList } from '../redux/contactOperations/contactOperations';\nimport contactSelector from '../redux/contactSelector/contactSelector';\nimport style from '../PhoneBook/PhoneBook.module.css';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    phone: '',\n  };\n\n  inputHandler = ({ target }) => {\n    const { value, name } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n    const { name } = this.state;\n    const { contacts } = this.props;\n\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is alredy contact!`);\n      this.reset();\n      return;\n    } else {\n      this.props.onSubmit(this.state);\n      this.reset();\n    }\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      phone: '',\n    });\n  };\n\n  render() {\n    const { name, phone } = this.state;\n    return (\n      <form className={style.form} onSubmit={this.submitHandler} autoComplete=\"off\">\n        <input\n          onChange={this.inputHandler}\n          placeholder=\"Enter name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n        ></input>\n        <input\n          onChange={this.inputHandler}\n          placeholder=\"Enter phone\"\n          type=\"text\"\n          name=\"phone\"\n          value={phone}\n        ></input>\n        <button className={style.btn} type=\"submit\">\n          Add contacts\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStatetoProps = state => ({\n  contacts: contactSelector.getVisibleUser(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: payload => dispatch(addToList(payload)),\n});\nexport default connect(mapStatetoProps, mapDispatchToProps)(Form);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteContact } from '../redux/contactOperations/contactOperations';\nimport contactSelector from '../redux/contactSelector/contactSelector';\nimport style from '../PhoneBook/PhoneBook.module.css';\n\nconst Contacts = ({ contacts, deleteNumber }) => {\n  console.log(contacts);\n  return (\n    <div>\n      <ul>\n        {contacts.map(contact => (\n          <li key={contact.id}>\n            <span>\n              {contact.name} : {contact.phone}\n            </span>\n            <button\n              className={style.btnDelete}\n              onClick={() => deleteNumber(contact.id)}\n              type=\"button\"\n            >\n              delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  deleteNumber: PropTypes.func.isRequired,\n};\n\nconst mapStatetoProps = state => ({\n  contacts: contactSelector.getVisibleUser(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteNumber: id => dispatch(deleteContact(id)),\n});\nexport default connect(mapStatetoProps, mapDispatchToProps)(Contacts);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../redux/actions/user-action';\nimport style from '../PhoneBook/PhoneBook.module.css';\nimport contactSelector from '../redux/contactSelector/contactSelector';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={style.form}>\n      <p>Find contact by name</p>\n      <input type=\"text\" placeholder=\"Find\" value={value} onChange={onChange} />\n    </div>\n  );\n};\n\nconst mapStatetoProps = state => ({\n  value: contactSelector.getFilter(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\nimport Form from './Form';\nimport Contacts from './Contacts';\nimport { connect } from 'react-redux';\nimport Filter from './Filter';\nimport { fetchContact } from '../redux/contactOperations/contactOperations';\nimport contactSelector from '../redux/contactSelector/contactSelector';\nimport style from '../PhoneBook/PhoneBook.module.css';\n\nclass PhoneBook extends Component {\n  state = {\n    contacts: [],\n  };\n  componentDidMount() {\n    this.props.fetchNumber();\n  }\n  render() {\n    const contact = this.props;\n    console.log(contact);\n    return (\n      <div className={style.container}>\n        <h1>PhoneBook</h1>\n        <Form />\n        <Filter />\n        <Contacts />\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = dispatch => ({\n  fetchNumber: () => dispatch(fetchContact()),\n});\n\nconst mapStatetoProps = state => ({\n  contact: contactSelector.getVisibleUser(state),\n});\nexport default connect(mapStatetoProps, mapDispatchToProps)(PhoneBook);\n","import React from \"react\";\nimport PhoneBook from \"./PhoneBook/PhoneBook\";\n\nconst App = () => {\n  return (\n    <div>\n      <PhoneBook />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhoneBook_container__3SDuF\",\"form\":\"PhoneBook_form__2FrpE\",\"btn\":\"PhoneBook_btn__lGfGp\",\"btnDelete\":\"PhoneBook_btnDelete__1xO3e\"};"],"sourceRoot":""}